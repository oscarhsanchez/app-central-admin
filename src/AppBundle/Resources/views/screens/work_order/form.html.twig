{% extends 'base.html.twig' %}

{% block page_title %}{{ 'menu.title.work_orders'|trans }}{% endblock %}
{% block page_breadcrumb %}
    <li>{{ 'menu.title.configuration'|trans }}</li>
    <li>
        <strong>
            <a href="{{ path('work_order_list', { type: type }) }}">
                {{ 'menu.title.work_orders'|trans }}
                {% if type == 'fixing' %}
                    - {{ 'menu.title.work_order_fixing'|trans }}
                {% elseif type == 'monitoring' %}
                    - {{ 'menu.title.work_order_monitoring'|trans }}
                {% elseif type == 'installation' %}
                    - {{ 'menu.title.work_order_installation'|trans }}
                {% elseif type == 'lighting' %}
                    - {{ 'menu.title.work_order_lighting'|trans }}
                {% endif %}
            </a>
        </strong>
    </li>
    <li class="active">
        <strong>{% if entity is defined and entity.pk_orden_trabajo is not empty %}{{ entity.pkOrdenTrabajo }}{% else %}{{ 'screens.work_orders.actions.add'|trans }}{% endif %}</strong>
    </li>
{% endblock %}

{% block body %}

    <div class="ibox">
        <div class="ibox-title">
            <h5>{% if entity is defined and entity.pk_orden_trabajo is not empty %}{{ entity.pkOrdenTrabajo }}{% else %}{{ 'screens.work_orders.actions.add'|trans }}{% endif %}</h5>
        </div>
        <div class="ibox-content">

            {% include 'ESocialUtilBundle:flash-messages:_flash.messages.html.twig' %}
            {% include 'ESocialUtilBundle:flash-messages:_form.errors.html.twig' %}

            {{ include('ESocialUtilBundle:Components:tabNavigation.html.twig', {
                'entity': entity is defined ? entity : null,
                'tab_selected' : 'basic_data',
                'template_path' : 'AppBundle:screens/work_order/formtabs',
                'tabs' : {
                    'basic_data': {
                        'title': 'work_order.tabs.basic_data'|trans,
                    },
                    'images': {
                        'title': 'work_order.tabs.images'|trans,
                        show: entity is defined and entity.pk_orden_trabajo is not empty,
                        message_show: 'form.text.need_save'|trans
                    },
                    'logs': {
                        'title': 'work_order.tabs.logs'|trans,
                        show: entity is defined and entity.pk_orden_trabajo is not empty,
                        message_show: 'form.text.need_save'|trans
                    }
                }
            })
            }}

        </div>
    </div>
    <script type="text/javascript">
        var boolEvalCheckWorkOrderStatus = true;
        function checkWorkOrderStatus(){
            if (parseInt($('#work_order_estado_orden').val()) != 4) return true;
            if ($("#work_order_motivo_ordenes_pendientes").val() == '') return true;
            {% if entityOld is defined and entityOld.estadoOrden == 4 %}
            return true;
            {% endif %}
            if (!boolEvalCheckWorkOrderStatus) return true;
            bootbox.confirm('Desea generar una incidencia?', function(confirmed){
                if(confirmed){
                    $('#work_order_motivo_ordenes_pendientes_incidencia').val('1');
                }else{
                    $('#work_order_motivo_ordenes_pendientes_incidencia').val('0');
                }
                boolEvalCheckWorkOrderStatus = false;
                $('#work-order-form').trigger('submit');
            });
            return false;
        }
        function selectMedio(data, vars) {
            var jsonData = decodeURIComponent(data);
            var obj = JSON.parse(jsonData);
            var objVars = JSON.parse(vars);
            $("#work_order_medio").val(obj.token);
            $("#select-input-group-work_order_medio").html(text3Dots(obj.name, 30));
            if (obj.ubicacion__latitud && obj.ubicacion__longitud) {
                setUbicacionMap(obj.ubicacion__latitud, obj.ubicacion__longitud);
            }
        }
        function selectMotivoOrdenesPendientes(data, vars){
            var jsonData = decodeURIComponent(data);
            var obj = JSON.parse(jsonData);
            var objVars = JSON.parse(vars);
            $("#work_order_motivo_ordenes_pendientes").val(obj.token);
            $("#select-input-group-work_order_motivo_ordenes_pendientes").html(obj.descripcion);
        }

        $(document).ready(function(){
            $('#work_order_estado_orden').change(function(){
                if (parseInt($(this).val()) == 4){
                    $('#work_order_motivo_ordenes_pendientes-wrapper').show();
                }else{
                    $('#work_order_motivo_ordenes_pendientes-wrapper').hide();
                }
            });
        });

        var ubicacionMap;
        function setUbicacionMap(latitud, longitud){
            $('#work-order-medio-ubicacion-map').show();
            var myLatLng = {lat: latitud, lng: longitud };
            ubicacionMap = new google.maps.Map(document.getElementById('work-order-medio-ubicacion-map'), { center: myLatLng, zoom: 8 });
            var marker = new google.maps.Marker({ position: myLatLng, map: ubicacionMap });
        }
        function initMapUbicacion(){
            {% if entity is defined and entity.medio is not empty and entity.medio.ubicacion is not empty %}
            setUbicacionMap({{ entity.medio.ubicacion.latitud }}, {{ entity.medio.ubicacion.longitud }});
            {% endif %}
        }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBrnM5OyIjcm8FYALdS1KZdE7yKa-x2Iqk&callback=initMapUbicacion" async defer></script>
{% endblock %}