{% include 'ESocialUtilBundle:flash-messages:_flash.messages.html.twig' %}

<div class="margin-b">
    <a class="btn btn-white" title="{{ 'work_order.buttons.add'|trans }}" href="{{ path('work_order_add', { type: type }) }}">
        <span class="glyphicon glyphicon-plus"></span>
        <strong>{{ 'work_order.buttons.add'|trans }}</strong>
    </a>
    <a class="btn btn-white" title="{{ 'work_order.buttons.change_user'|trans }}" href="{{ path('work_order_edit_field', { type: type, field_type: 'user' }) }}" onclick="loadAjaxFormPage(this, null, null, work_order_list_reload); return false;">
        <span class="glyphicon glyphicon-plus"></span>
        <strong>{{ 'work_order.buttons.change_user'|trans }}</strong>
    </a>
    <a class="btn btn-white" title="{{ 'work_order.buttons.date_limit'|trans }}" href="{{ path('work_order_edit_field', { type: type, field_type: 'date_limit' }) }}" onclick="loadAjaxFormPage(this, null, null, work_order_list_reload); return false;">
        <span class="glyphicon glyphicon-plus"></span>
        <strong>{{ 'work_order.buttons.change_date_limit'|trans }}</strong>
    </a>
    <a class="btn btn-white" title="{{ 'work_order.buttons.state'|trans }}" href="{{ path('work_order_edit_field', { type: type, field_type: 'state' }) }}" onclick="loadAjaxFormPage(this, null, null, work_order_list_reload); return false;">
        <span class="glyphicon glyphicon-plus"></span>
        <strong>{{ 'work_order.buttons.change_state'|trans }}</strong>
    </a>
</div>

<table id="dt-work-order-list" class="table table-striped table-bordered table-hover">
    <thead>
    <tr>
        <th class="datatable-chk-cell"><input type="checkbox" class="i-checks datatable-chk-select-all" value="all" /></th>
        <th>{{ 'form.work_order.label.priority'|trans }}</th>
        <th>{{ 'form.work_order.label.estado_orden'|trans }}</th>
        <th>{{ 'form.work_order.label.created_at'|trans }}</th>
        <th>{{ 'form.work_order.label.date_limit'|trans }}</th>
        <th>{{ 'form.work_order.label.fecha_cierre'|trans }}</th>
        <th>{{ 'form.work_order.label.location'|trans }}</th>
        <th>{{ 'form.work_order.label.user'|trans }}</th>
        <th>{{ 'form.label.actions'|trans }}</th>
    </tr>
    </thead>
</table>

<script type="text/javascript">
    var work_order_list = null;
    $(document).ready(function() {
        var table_columns = [
            {
                "mData": function (source) {
                    return '<input type="checkbox" class="i-checks" value="'+source.token+'" />';
                }
            },
            {
                "mData": function (source) {
                    switch(source.priority){
                        case 0: return '<i class="fa fa-circle" style="color: #00bb00"></i>'; break;
                        case 1: return '<i class="fa fa-circle" style="color: #ffaa00"></i>'; break;
                        case 2: return '<i class="fa fa-circle" style="color: #ff0000"></i>'; break;
                    }
                    return '';
                }
            },
            {"mData": "estado_orden"},
            {"mData": "created_at"},
            {"mData": "fecha_limite"},
            {"mData": "fecha_cierre"},
            {"mData": "medio__ubicacion__ubicacion"},
            {"mData": "codigo_user"},
            {
                "mData": function (source){
                    var actions = '<a class="btn btn-primary btn-xs" href="' + Routing.generate('work_order_edit', { _locale: '{{ app.request.locale }}', type: '{{ type }}', id: encodeURIComponent(source.token) }) + '"><span class="glyphicon glyphicon-edit"></span> &nbsp; {{ 'form.actions.edit'|trans }}</a>&nbsp; ';
                    actions += '<a class="btn btn-primary btn-xs" title="{{ 'work_order.buttons.change_user'|trans }}" href="' + Routing.generate('work_order_edit_field', { _locale: '{{ app.request.locale }}', type: '{{ type }}', id: encodeURIComponent(source.token), field_type: 'user' }) + '" onclick="loadAjaxFormPage(this, null, null, work_order_list_reload); return false;"><span class="glyphicon glyphicon-edit"></span> &nbsp; {{ 'work_order.buttons.change_user'|trans }}</a>&nbsp; ';
                    actions += '<a class="btn btn-primary btn-xs" title="{{ 'work_order.buttons.change_date_limit'|trans }}" href="' + Routing.generate('work_order_edit_field', { _locale: '{{ app.request.locale }}', type: '{{ type }}', id: encodeURIComponent(source.token), field_type: 'date_limit' }) + '" onclick="loadAjaxFormPage(this, null, null, work_order_list_reload); return false;"><span class="glyphicon glyphicon-edit"></span> &nbsp; {{ 'work_order.buttons.change_date_limit'|trans }}</a>&nbsp; ';
                    actions += '<a class="btn btn-primary btn-xs" title="{{ 'work_order.buttons.change_state'|trans }}" href="' + Routing.generate('work_order_edit_field', { _locale: '{{ app.request.locale }}', type: '{{ type }}', id: encodeURIComponent(source.token), field_type: 'state' }) + '" onclick="loadAjaxFormPage(this, null, null, work_order_list_reload); return false;"><span class="glyphicon glyphicon-edit"></span> &nbsp; {{ 'work_order.buttons.change_state'|trans }}</a>&nbsp; ';
                    actions += '<a class="btn btn-primary btn-xs" title="{{ 'work_order.buttons.view_log'|trans }}" href="' + Routing.generate('work_order_view_log', { _locale: '{{ app.request.locale }}', type: '{{ type }}', id: encodeURIComponent(source.token) }) + '" onclick="loadAjaxPage(this); return false;"><span class="glyphicon glyphicon-edit"></span> &nbsp; {{ 'work_order.buttons.view_log'|trans }}</a>&nbsp; ';
                    actions += '<a class="btn btn-primary btn-xs" href="javascript:void(0)" onclick="bootbox.confirm(\'Seguro que desea eliminar el registro?\', function(confirmed){ if(confirmed) executeAjax(\'' + Routing.generate('work_order_delete', { _locale: '{{ app.request.locale }}', type: '{{ type }}', id: encodeURIComponent(source.token) }) + '\', null, null, work_order_list_reload); }); return false;"><span class="glyphicon glyphicon-remove"></span> &nbsp; {{ 'form.actions.delete'|trans }}</a>&nbsp; ';
                    return actions;
                }
            }
        ];

        jQuery(document).ready(function(){
            work_order_list = TableManaged.init(
                    '#dt-work-order-list',
                    '{{ url('work_order_list_json', { _type: type }) }}',
                    null,
                    [],
                    table_columns,
                    '{{ url('datatables_i18n_fragment', { language: app.request.locale }) }}'
            );
        });
    });

    function work_order_list_reload(result){
        if (result && result.message){
            var alertType = result.result == 1 ? 'success' : 'danger';
            $(work_order_list).closest('.dataTables_wrapper').prepend(Notification.alert(alertType, result.message));
        }
        work_order_list.api().ajax.reload();
    }

    function setSelectedItems(work_order_list, type){
        var wrapper = $(work_order_list).closest('.dataTables_wrapper');
        var selectedValues = getSelectedChkItemsIntoSelector(wrapper);
        //$('#work_order_'+type+'_tokens').attr("value",selectedValues.join());
        $('#work_order_'+type+'_tokens').val(selectedValues.join());
        //alert($('#work_order_user_tokens').val());
    }
</script>